{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\filip\\\\Documents\\\\MagicGathering\\\\magicgathering\\\\client\\\\src\\\\components\\\\UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport HeaderNav from './HeaderNav';\nimport \"./UserPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserPage(props) {\n  _s();\n\n  let cardList;\n  let collectionList;\n  const [collections, setCollections] = useState(null);\n  const [colError, setColError] = useState(null);\n  const [unnoficialCards, setUnnoficialCards] = useState(null);\n  const {\n    loggedUser\n  } = props;\n  const [viewMode, setViewMode] = useState(3);\n  useEffect(() => {\n    fetch(`/collections/user/${props.loggedUser.id}`).then(res => res.json()).then(col => {\n      setCollections(col);\n    }).catch(error => {\n      setColError(error);\n    });\n    fetch(`/cards/unnoficial/${props.loggedUser.id}`).then(res => res.json()).then(cards => {\n      setUnnoficialCards(col);\n    }).catch(error => {\n      setColError(error);\n    });\n  }, [collections, usr]);\n\n  const handleViewMode = value => {\n    setViewMode(value);\n  };\n\n  const headerProps = {\n    handleViewMode,\n    loggedUser\n  }; //Fill in variable with list of cards to display\n\n  if (props.cards) {\n    cardList = props.cards.map((card, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card\",\n        bg: \"Info\",\n        text: \"dark\",\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h5\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: card.cardName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            \"aria-label\": \"First group\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: card.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 18\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this);\n    });\n  } //Fill in variable with list of collections to display\n\n\n  if (props.collections) {\n    collectionList = props.collections.map((collection, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card\",\n        bg: \"Info\",\n        text: \"dark\",\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h5\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            \"aria-label\": \"First group\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n          vaiant: \"top\",\n          src: \"../logo.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: collection.colName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 18\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this);\n    });\n  }\n\n  let lists; //Conditional Rendering according with view mode\n\n  switch (viewMode) {\n    case 1:\n      lists = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardList\",\n          children: [\" \", cardList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 2:\n      lists = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Collections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardList\",\n          children: [\" \", collectionList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 3:\n    default:\n      lists = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardList\",\n          children: [\" \", cardList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Collections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardList\",\n          children: [\" \", collectionList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(HeaderNav, { ...headerProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: lists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserPage, \"6MjTX9eEe04IITCVzhwwtiqX5I4=\");\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useState","Button","Card","ButtonGroup","HeaderNav","UserPage","props","cardList","collectionList","collections","setCollections","colError","setColError","unnoficialCards","setUnnoficialCards","loggedUser","viewMode","setViewMode","useEffect","fetch","id","then","res","json","col","catch","error","cards","usr","handleViewMode","value","headerProps","map","card","index","width","cardName","description","collection","colName","lists"],"sources":["C:/Users/filip/Documents/MagicGathering/magicgathering/client/src/components/UserPage.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport HeaderNav from './HeaderNav';\r\nimport \"./UserPage.css\";\r\n\r\nfunction UserPage(props) {\r\n    let cardList;\r\n    let collectionList;\r\n    const [collections, setCollections] = useState(null);\r\n    const [colError, setColError] = useState(null);\r\n    const [unnoficialCards, setUnnoficialCards] = useState(null);\r\n\r\n    const {loggedUser} = props;\r\n\r\n    const [viewMode, setViewMode] = useState(3);\r\n\r\n\r\n    \r\n  useEffect(() => {\r\n    fetch(`/collections/user/${props.loggedUser.id}`)\r\n      .then((res) => res.json())\r\n      .then((col) =>{\r\n        setCollections(col)\r\n      }\r\n        )\r\n      .catch(\r\n          (error) => {\r\n            setColError(error);\r\n          })\r\n\r\n    fetch(`/cards/unnoficial/${props.loggedUser.id}`)\r\n          .then((res) => res.json())\r\n          .then((cards) =>{\r\n            setUnnoficialCards(col)\r\n          }\r\n            )\r\n          .catch(\r\n              (error) => {\r\n                setColError(error);\r\n              })\r\n  }, [collections, usr]);\r\n\r\n    const handleViewMode =(value)=>{\r\n        setViewMode(value);\r\n    }\r\n\r\n    const headerProps = {\r\n        handleViewMode,\r\n        loggedUser\r\n    }\r\n\r\n    //Fill in variable with list of cards to display\r\n    if(props.cards){\r\n        cardList = props.cards.map((card, index)=>{\r\n            return(\r\n              <Card className = \"card\" key= {index} bg= 'Info' text = 'dark' style={{ width: '18rem' }}>\r\n                 <Card.Header as=\"h5\">\r\n                    <Card.Title>{card.cardName}</Card.Title>\r\n                    <ButtonGroup aria-label=\"First group\">\r\n                        <Button variant=\"\">Edit</Button>\r\n                        <Button variant=\"secondary\">Delete</Button>\r\n                    </ButtonGroup>\r\n                </Card.Header>\r\n                 <Card.Body>\r\n                     <Card.Text>\r\n                     {card.description}\r\n                     </Card.Text>\r\n                 </Card.Body>\r\n             </Card>\r\n             )\r\n         })\r\n    }\r\n\r\n\r\n    //Fill in variable with list of collections to display\r\n    if(props.collections){\r\n        collectionList = props.collections.map((collection, index)=>{\r\n            return(\r\n              <Card className = \"card\"  key= {index} bg= 'Info' text = 'dark' style={{ width: '18rem' }}>\r\n                <Card.Header as=\"h5\">\r\n                <ButtonGroup aria-label=\"First group\">\r\n                        <Button variant=\"\">Edit</Button>\r\n                        <Button variant=\"secondary\">Delete</Button>\r\n                    </ButtonGroup>\r\n\r\n                </Card.Header>\r\n                 <Card.Img vaiant=\"top\" src=\"../logo.svg\" />\r\n                 <Card.Body>\r\n                     <Card.Title>{collection.colName}</Card.Title>\r\n                 </Card.Body>\r\n             </Card>\r\n             )\r\n         })\r\n    }\r\n\r\n    let lists;\r\n    //Conditional Rendering according with view mode\r\n\r\n    switch(viewMode){\r\n        case 1:\r\n            lists = <> <p>Your Cards</p>\r\n\r\n            <div className='cardList'> {cardList}</div></>\r\n            break;\r\n        case 2:\r\n            lists = <> <p>Your Collections</p>\r\n            <div className='cardList'> {collectionList}</div></>\r\n            break;\r\n        case 3:\r\n        default:\r\n            lists = <> <p>Your Cards</p>\r\n\r\n            <div className='cardList'> {cardList}</div>\r\n\r\n            <p>Your Collections</p>\r\n            <div className='cardList'> {collectionList}</div>\r\n            </>\r\n    }\r\n    \r\n    return (\r\n        <div className='userPage'>\r\n            <div className='header'>\r\n                <HeaderNav {...headerProps}></HeaderNav>\r\n            </div>\r\n            <div className='body'>\r\n                {lists}\r\n\r\n            </div>\r\n           \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}