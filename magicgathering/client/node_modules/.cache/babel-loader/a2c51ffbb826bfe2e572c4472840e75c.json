{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\filip\\\\Documents\\\\MagicGathering\\\\magicgathering\\\\client\\\\src\\\\components\\\\UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport HeaderNav from './HeaderNav';\nimport \"./UserPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserPage(props) {\n  _s();\n\n  let cardList;\n  let collectionList;\n  const {\n    loggedUser\n  } = props;\n  const [viewMode, setViewMode] = useState(3);\n  useEffect(() => {\n    fetch(`/collections/user/${props.loggedUser.id}`).then(res => res.json()).then(user => {\n      setShowLogin(false);\n      setLoggedUser(user);\n    }).catch(error => {\n      setLoginError(true);\n    });\n  }, [pass, usr]);\n\n  const handleViewMode = value => {\n    setViewMode(value);\n  };\n\n  const headerProps = {\n    handleViewMode,\n    loggedUser\n  }; //Fill in variable with list of cards to display\n\n  if (props.cards) {\n    cardList = props.cards.map((card, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card\",\n        bg: \"Info\",\n        text: \"dark\",\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h5\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: card.cardName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            \"aria-label\": \"First group\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: card.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 18\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this);\n    });\n  } //Fill in variable with list of collections to display\n\n\n  if (props.collections) {\n    collectionList = props.collections.map((collection, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card\",\n        bg: \"Info\",\n        text: \"dark\",\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h5\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            \"aria-label\": \"First group\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n          vaiant: \"top\",\n          src: \"../logo.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: collection.colName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 18\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this);\n    });\n  }\n\n  let lists; //Conditional Rendering according with view mode\n\n  switch (viewMode) {\n    case 1:\n      lists = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardList\",\n          children: [\" \", cardList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 2:\n      lists = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Collections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardList\",\n          children: [\" \", collectionList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 3:\n    default:\n      lists = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardList\",\n          children: [\" \", cardList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Collections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardList\",\n          children: [\" \", collectionList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(HeaderNav, { ...headerProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: lists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserPage, \"hMFV9w393iA74hWd7xSCapFkhh0=\");\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useState","Button","Card","ButtonGroup","HeaderNav","UserPage","props","cardList","collectionList","loggedUser","viewMode","setViewMode","useEffect","fetch","id","then","res","json","user","setShowLogin","setLoggedUser","catch","error","setLoginError","pass","usr","handleViewMode","value","headerProps","cards","map","card","index","width","cardName","description","collections","collection","colName","lists"],"sources":["C:/Users/filip/Documents/MagicGathering/magicgathering/client/src/components/UserPage.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport HeaderNav from './HeaderNav';\r\nimport \"./UserPage.css\";\r\n\r\nfunction UserPage(props) {\r\n    let cardList;\r\n    let collectionList;\r\n    const {loggedUser} = props;\r\n\r\n    const [viewMode, setViewMode] = useState(3);\r\n\r\n\r\n    \r\n  useEffect(() => {\r\n    fetch(`/collections/user/${props.loggedUser.id}`)\r\n      .then((res) => res.json())\r\n      .then((user) =>{\r\n        setShowLogin(false);\r\n        setLoggedUser(user)}\r\n        )\r\n      .catch(\r\n          (error) => {\r\n            setLoginError(true);\r\n          })\r\n  }, [pass, usr]);\r\n\r\n    const handleViewMode =(value)=>{\r\n        setViewMode(value);\r\n    }\r\n\r\n    const headerProps = {\r\n        handleViewMode,\r\n        loggedUser\r\n    }\r\n\r\n    //Fill in variable with list of cards to display\r\n    if(props.cards){\r\n        cardList = props.cards.map((card, index)=>{\r\n            return(\r\n              <Card className = \"card\" key= {index} bg= 'Info' text = 'dark' style={{ width: '18rem' }}>\r\n                 <Card.Header as=\"h5\">\r\n                    <Card.Title>{card.cardName}</Card.Title>\r\n                    <ButtonGroup aria-label=\"First group\">\r\n                        <Button variant=\"\">Edit</Button>\r\n                        <Button variant=\"secondary\">Delete</Button>\r\n                    </ButtonGroup>\r\n                </Card.Header>\r\n                 <Card.Body>\r\n                     <Card.Text>\r\n                     {card.description}\r\n                     </Card.Text>\r\n                 </Card.Body>\r\n             </Card>\r\n             )\r\n         })\r\n    }\r\n\r\n\r\n    //Fill in variable with list of collections to display\r\n    if(props.collections){\r\n        collectionList = props.collections.map((collection, index)=>{\r\n            return(\r\n              <Card className = \"card\"  key= {index} bg= 'Info' text = 'dark' style={{ width: '18rem' }}>\r\n                <Card.Header as=\"h5\">\r\n                <ButtonGroup aria-label=\"First group\">\r\n                        <Button variant=\"\">Edit</Button>\r\n                        <Button variant=\"secondary\">Delete</Button>\r\n                    </ButtonGroup>\r\n\r\n                </Card.Header>\r\n                 <Card.Img vaiant=\"top\" src=\"../logo.svg\" />\r\n                 <Card.Body>\r\n                     <Card.Title>{collection.colName}</Card.Title>\r\n                 </Card.Body>\r\n             </Card>\r\n             )\r\n         })\r\n    }\r\n\r\n    let lists;\r\n    //Conditional Rendering according with view mode\r\n\r\n    switch(viewMode){\r\n        case 1:\r\n            lists = <> <p>Your Cards</p>\r\n\r\n            <div className='cardList'> {cardList}</div></>\r\n            break;\r\n        case 2:\r\n            lists = <> <p>Your Collections</p>\r\n            <div className='cardList'> {collectionList}</div></>\r\n            break;\r\n        case 3:\r\n        default:\r\n            lists = <> <p>Your Cards</p>\r\n\r\n            <div className='cardList'> {cardList}</div>\r\n\r\n            <p>Your Collections</p>\r\n            <div className='cardList'> {collectionList}</div>\r\n            </>\r\n    }\r\n    \r\n    return (\r\n        <div className='userPage'>\r\n            <div className='header'>\r\n                <HeaderNav {...headerProps}></HeaderNav>\r\n            </div>\r\n            <div className='body'>\r\n                {lists}\r\n\r\n            </div>\r\n           \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}