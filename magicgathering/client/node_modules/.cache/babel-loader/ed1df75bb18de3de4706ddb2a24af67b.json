{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\filip\\\\Documents\\\\MagicGathering\\\\magicgathering\\\\client\\\\src\\\\components\\\\UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport CardsModal from './Modals/CardsModal';\nimport HeaderNav from './HeaderNav';\nimport DisplayCard from './DisplayCards/InfoDisplay';\nimport \"./UserPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPage(props) {\n  _s();\n\n  let cardList;\n  let lists;\n  let collectionList;\n  const {\n    loggedUser\n  } = props; //User cards and collections\n\n  const [collections, setCollections] = useState(null);\n  const [cards, setOfficialCards] = useState(null); //view collection's cards info\n\n  const [colOnModal, setcolOnModal] = useState(null);\n  const [viewCardsModal, setViewCardsModal] = useState(false); //view Mode\n\n  const [viewMode, setViewMode] = useState(3);\n  useEffect(() => {\n    fetch(`/collections/user/${props.loggedUser.id}`).then(res => res.json()).then(col => {\n      setCollections(col);\n    }).catch(error => {});\n    fetch(`/cards/${props.loggedUser.id}`).then(res => res.json()).then(cards => {\n      setOfficialCards(cards);\n    }).catch(error => {});\n  }, [props.loggedUser.id]);\n\n  const handleViewMode = value => {\n    setViewMode(value);\n  };\n\n  const handleViewCardsModal = colId => {\n    setcolOnModal(colId);\n    setViewCardsModal(!viewCardsModal);\n  };\n\n  const headerProps = {\n    handleViewMode,\n    loggedUser\n  };\n  const cardsModalProps = {\n    viewCardsModal,\n    handleViewCardsModal,\n    cards\n  };\n\n  let getCardCol = cardId => {\n    if (collections) {\n      let cardName = collections.find(col => col.id == cardId);\n      return cardName ? cardName.colName : \"None\";\n    }\n\n    return \"None\";\n  }; //Fill in variable with list of cards to display\n\n\n  if (cards) {\n    cardList = cards.map(cardGroup => cardGroup.map((card, index) => {\n      let displayProps = {\n        isCard: true,\n        card,\n        index,\n        getCardCol\n      };\n      return /*#__PURE__*/_jsxDEV(DisplayCard, { ...displayProps\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    }));\n  } //Fill in variable with list of collections to display\n\n\n  if (collections) {\n    collectionList = collections.map((collection, index) => {\n      if (collection) {\n        let displayProps = {\n          collection,\n          index,\n          handleViewCardsModal\n        };\n        return /*#__PURE__*/_jsxDEV(DisplayCard, { ...displayProps\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 20\n        }, this);\n      }\n    });\n  } //Conditional Rendering according with view mode\n\n\n  switch (viewMode) {\n    case 1:\n      lists = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 3,\n          className: \"justify-content-center\",\n          children: [\" \", cardList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this);\n      break;\n\n    case 2:\n      lists = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Collections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 3,\n          className: \"justify-content-center\",\n          children: [\" \", collectionList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this);\n      break;\n\n    case 3:\n    default:\n      lists = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 3,\n          className: \"justify-content-center\",\n          children: [\" \", cardList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Collections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 3,\n          className: \"justify-content-center\",\n          children: [\" \", collectionList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(HeaderNav, { ...headerProps,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: lists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardsModal, { ...cardsModalProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserPage, \"AXKLqSzOqj8Ws/nMCaQLEcWfJHU=\");\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useState","useEffect","Row","CardsModal","HeaderNav","DisplayCard","UserPage","props","cardList","lists","collectionList","loggedUser","collections","setCollections","cards","setOfficialCards","colOnModal","setcolOnModal","viewCardsModal","setViewCardsModal","viewMode","setViewMode","fetch","id","then","res","json","col","catch","error","handleViewMode","value","handleViewCardsModal","colId","headerProps","cardsModalProps","getCardCol","cardId","cardName","find","colName","map","cardGroup","card","index","displayProps","isCard","collection","width"],"sources":["C:/Users/filip/Documents/MagicGathering/magicgathering/client/src/components/UserPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport CardsModal from './Modals/CardsModal'\r\nimport HeaderNav from './HeaderNav';\r\nimport DisplayCard from './DisplayCards/InfoDisplay';\r\nimport \"./UserPage.css\";\r\n\r\nfunction UserPage(props) {\r\n    let cardList;\r\n    let lists;\r\n    let collectionList;\r\n\r\n    const {loggedUser} = props;\r\n\r\n    //User cards and collections\r\n    const [collections, setCollections] = useState(null);\r\n    const [cards, setOfficialCards] = useState(null);\r\n\r\n    //view collection's cards info\r\n    const [colOnModal, setcolOnModal] = useState(null)\r\n    const [viewCardsModal, setViewCardsModal] = useState(false);\r\n\r\n    //view Mode\r\n    const [viewMode, setViewMode] = useState(3);\r\n\r\n    useEffect(() => {\r\n        fetch(`/collections/user/${props.loggedUser.id}`)\r\n        .then((res) => res.json())\r\n        .then((col) =>{\r\n            setCollections(col)\r\n        }\r\n            )\r\n        .catch(\r\n            (error) => { })\r\n\r\n        fetch(`/cards/${props.loggedUser.id}`)\r\n            .then((res) => res.json())\r\n            .then((cards) =>{\r\n                setOfficialCards(cards)\r\n            }\r\n                    )\r\n            .catch((error) => { })\r\n\r\n    }, [props.loggedUser.id]);\r\n\r\n    const handleViewMode =(value)=>{\r\n        setViewMode(value);\r\n    }\r\n\r\n    const handleViewCardsModal = (colId)=>{\r\n        setcolOnModal(colId);\r\n        setViewCardsModal(!viewCardsModal);\r\n    }\r\n\r\n    const headerProps = {\r\n        handleViewMode,\r\n        loggedUser\r\n    }\r\n\r\n    const cardsModalProps = {\r\n        viewCardsModal,\r\n        handleViewCardsModal,\r\n        cards\r\n    }\r\n\r\n    \r\n    let getCardCol = (cardId)=>{\r\n        if(collections){\r\n            let cardName = collections.find((col)=>col.id == cardId)\r\n\r\n            return cardName ? cardName.colName : \"None\";\r\n        }\r\n        return \"None\";\r\n    }\r\n\r\n    //Fill in variable with list of cards to display\r\n    if(cards){\r\n        cardList = cards.map((cardGroup)=> cardGroup.map((card, index)=>{\r\n            let displayProps= {\r\n                isCard: true,\r\n                card, \r\n                index, \r\n                getCardCol\r\n            }\r\n            return(\r\n                <DisplayCard key ={index} {...displayProps}></DisplayCard>\r\n             )\r\n         }))\r\n    }\r\n\r\n\r\n    //Fill in variable with list of collections to display\r\n    if(collections){\r\n        collectionList = collections.map((collection, index)=>{\r\n            if(collection){\r\n                let displayProps= {\r\n                    collection, \r\n                    index, \r\n                    handleViewCardsModal\r\n                }\r\n                return(\r\n                   <DisplayCard key ={index} {...displayProps}></DisplayCard>\r\n                 )\r\n            }\r\n         })\r\n    }\r\n\r\n    //Conditional Rendering according with view mode\r\n\r\n    switch(viewMode){\r\n        case 1:\r\n            lists = <div> <p>Your Cards</p>\r\n\r\n            <Row xs={2} md={3} className=\"justify-content-center\"> {cardList}</Row></div>\r\n            break;\r\n        case 2:\r\n            lists = <div> <p>Your Collections</p>\r\n            <Row xs={2} md={3} className=\"justify-content-center\"> {collectionList}</Row></div>\r\n            break;\r\n        case 3:\r\n        default:\r\n            lists = <div> \r\n                <p>Your Cards</p>\r\n                <Row xs={2} md={3} className=\"justify-content-center\"> {cardList}</Row>\r\n\r\n                <p>Your Collections</p>\r\n                <Row xs={2} md={3} className=\"justify-content-center\"> {collectionList}</Row>\r\n            </div>\r\n    }\r\n    \r\n    return (\r\n        <div className='userPage'>\r\n            <div className='header'>\r\n                <HeaderNav {...headerProps} style={{ width: '100%' }}></HeaderNav>\r\n            </div>\r\n            <div className='body'>\r\n                {lists}\r\n            </div>\r\n           <CardsModal {...cardsModalProps}></CardsModal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}