{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\filip\\\\Documents\\\\MagicGathering\\\\magicgathering\\\\client\\\\src\\\\components\\\\UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport CardsModal from './Modals/CardsModal';\nimport HeaderNav from './HeaderNav';\nimport DisplayCard from './DisplayCards/DisplayCard';\nimport \"./UserPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPage(props) {\n  _s();\n\n  let cardList;\n  let lists;\n  let collectionList;\n  const [collections, setCollections] = useState(null);\n  const [cards, setOfficialCards] = useState(null);\n  const [viewCardsModal, setViewCardsModal] = useState(false);\n  const {\n    loggedUser\n  } = props;\n  const [viewMode, setViewMode] = useState(3);\n  useEffect(() => {\n    fetch(`/collections/user/${props.loggedUser.id}`).then(res => res.json()).then(col => {\n      setCollections(col);\n    }).catch(error => {});\n    fetch(`/cards/${props.loggedUser.id}`).then(res => res.json()).then(cards => {\n      setOfficialCards(cards);\n    }).catch(error => {});\n  }, [props.loggedUser.id]);\n\n  const handleViewMode = value => {\n    setViewMode(value);\n  };\n\n  const handleViewCardsModal = () => {\n    setViewCardsModal(!viewCardsModal);\n  };\n\n  const headerProps = {\n    handleViewMode,\n    loggedUser\n  };\n\n  let getCardCol = cardId => {\n    if (collections) {\n      let cardName = collections.find(col => col.id == cardId);\n      return cardName ? cardName.colName : \"None\";\n    }\n\n    return \"None\";\n  }; //Fill in variable with list of cards to display\n\n\n  if (cards) {\n    cardList = cards.map(cardGroup => cardGroup.map((card, index) => {\n      let displayProps = {\n        card,\n        index,\n        getCardCol\n      };\n      return /*#__PURE__*/_jsxDEV(DisplayCard, { ...displayProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    }));\n  } //Fill in variable with list of collections to display\n\n\n  if (collections) {\n    collectionList = collections.map((collection, index) => {\n      let displayProps = {\n        collection,\n        index,\n        handleViewCardsModal\n      };\n      return /*#__PURE__*/_jsxDEV(DisplayCard, { ...displayProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    });\n  } //Conditional Rendering according with view mode\n\n\n  switch (viewMode) {\n    case 1:\n      lists = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 3,\n          className: \"justify-content-center\",\n          children: [\" \", cardList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this);\n      break;\n\n    case 2:\n      lists = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Collections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 3,\n          className: \"justify-content-center\",\n          children: [\" \", collectionList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this);\n      break;\n\n    case 3:\n    default:\n      lists = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 3,\n          className: \"justify-content-center\",\n          children: [\" \", cardList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your Collections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 3,\n          className: \"justify-content-center\",\n          children: [\" \", collectionList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(HeaderNav, { ...headerProps,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [lists, /*#__PURE__*/_jsxDEV(CardsModal, { ...cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserPage, \"QrINHjzevZqXMusdBas19bOIr1U=\");\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useState","useEffect","Row","CardsModal","HeaderNav","DisplayCard","UserPage","props","cardList","lists","collectionList","collections","setCollections","cards","setOfficialCards","viewCardsModal","setViewCardsModal","loggedUser","viewMode","setViewMode","fetch","id","then","res","json","col","catch","error","handleViewMode","value","handleViewCardsModal","headerProps","getCardCol","cardId","cardName","find","colName","map","cardGroup","card","index","displayProps","collection","width"],"sources":["C:/Users/filip/Documents/MagicGathering/magicgathering/client/src/components/UserPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport CardsModal from './Modals/CardsModal'\r\nimport HeaderNav from './HeaderNav';\r\nimport DisplayCard from './DisplayCards/DisplayCard';\r\nimport \"./UserPage.css\";\r\n\r\n\r\nfunction UserPage(props) {\r\n    let cardList;\r\n    let lists;\r\n\r\n    let collectionList;\r\n    const [collections, setCollections] = useState(null);\r\n    const [cards, setOfficialCards] = useState(null);\r\n    const [viewCardsModal, setViewCardsModal] = useState(false);\r\n    const {loggedUser} = props;\r\n\r\n    const [viewMode, setViewMode] = useState(3);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`/collections/user/${props.loggedUser.id}`)\r\n        .then((res) => res.json())\r\n        .then((col) =>{\r\n            setCollections(col)\r\n        }\r\n            )\r\n        .catch(\r\n            (error) => { })\r\n\r\n        fetch(`/cards/${props.loggedUser.id}`)\r\n            .then((res) => res.json())\r\n            .then((cards) =>{\r\n                setOfficialCards(cards)\r\n            }\r\n                    )\r\n            .catch((error) => { })\r\n\r\n    }, [props.loggedUser.id]);\r\n\r\n    const handleViewMode =(value)=>{\r\n        setViewMode(value);\r\n    }\r\n\r\n    const handleViewCardsModal = ()=>{\r\n        setViewCardsModal(!viewCardsModal);\r\n    }\r\n\r\n    const headerProps = {\r\n        handleViewMode,\r\n        loggedUser\r\n    }\r\n\r\n    \r\n    let getCardCol = (cardId)=>{\r\n        if(collections){\r\n            let cardName = collections.find((col)=>col.id == cardId)\r\n\r\n            return cardName ? cardName.colName : \"None\";\r\n        }\r\n        return \"None\";\r\n    }\r\n\r\n    //Fill in variable with list of cards to display\r\n    if(cards){\r\n        cardList = cards.map((cardGroup)=> cardGroup.map((card, index)=>{\r\n            let displayProps= {\r\n                card, \r\n                index, \r\n                getCardCol\r\n            }\r\n            return(\r\n                <DisplayCard {...displayProps}></DisplayCard>\r\n             )\r\n         }))\r\n    }\r\n\r\n\r\n    //Fill in variable with list of collections to display\r\n    if(collections){\r\n        collectionList = collections.map((collection, index)=>{\r\n            let displayProps= {\r\n                collection, \r\n                index, \r\n                handleViewCardsModal\r\n            }\r\n            return(\r\n                <DisplayCard {...displayProps}></DisplayCard>\r\n             )\r\n         })\r\n    }\r\n\r\n    //Conditional Rendering according with view mode\r\n\r\n    switch(viewMode){\r\n        case 1:\r\n            lists = <div> <p>Your Cards</p>\r\n\r\n            <Row xs={2} md={3} className=\"justify-content-center\"> {cardList}</Row></div>\r\n            break;\r\n        case 2:\r\n            lists = <div> <p>Your Collections</p>\r\n            <Row xs={2} md={3} className=\"justify-content-center\"> {collectionList}</Row></div>\r\n            break;\r\n        case 3:\r\n        default:\r\n            lists = <div> \r\n                <p>Your Cards</p>\r\n                <Row xs={2} md={3} className=\"justify-content-center\"> {cardList}</Row>\r\n\r\n                <p>Your Collections</p>\r\n                <Row xs={2} md={3} className=\"justify-content-center\"> {collectionList}</Row>\r\n            </div>\r\n    }\r\n    \r\n    return (\r\n        <div className='userPage'>\r\n            <div className='header'>\r\n                <HeaderNav {...headerProps} style={{ width: '100%' }}></HeaderNav>\r\n            </div>\r\n            <div className='body'>\r\n                {lists}\r\n            <CardsModal {...cards}></CardsModal>\r\n            </div>\r\n           \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}